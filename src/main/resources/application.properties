#
# Application Configuration
#

# Global
github.token=${github.token}
github.users=cmoulliard,iocanel,geoand,metacosm,gytis,aureamunoz,jacobdotcosta

# Bridge
github.bridge.terminal-label.name=upstream/closed
github.bridge.terminal-label.description=The issue has been closed upstream
github.bridge.terminal-label.color=a9f466

github.bridge.auto-label.name=7 - Community development
github.bridge.auto-label.description=Development around upstream/community projects
github.bridge.auto-label.color=cc9c18

github.bridge.source-repos=quarkusio/quarkus,fabric8io/kubernetes-client,spring-cloud/spring-cloud-kubernetes
github.bridge.target-organization=snowdrop-zen
# Reporting
github.reporting.organizations=snowdrop,snowdrop-bot,quarkusio,halkyonio,dekorateio,spring-cloud,fabric8io,sundrio

#This option allows us to directly specify repositories in the form <user>/<repo> without checking for forks etc.
github.reporting.additional.repositories=halkyonio/hal,halkyonio/operator,halkyonio/api,halkyonio/container-images,snowdrop/k8s-infra,snowdrop/snowdrop-team

github.bridge.enabled=false
github.reporting.enabled=false

github.reporting.target.organization=snowdrop
github.reporting.target.repository=snowdrop-team

# Production Profile: Enable Bridge and Reporitng on startup
%prod.github.bridge.enabled=true
%prod.github.reporting.enabled=true

# Jira
jira.url=https://issues.redhat.com
jira.reporting.repos=
jira.users=

##########
# Report #
##########
report.weekly.name=Weekly Report

report.state.closed=  ![#a9a9a9](https://via.placeholder.com/15/a9a9a9/000000?text=+)
report.state.open=  ![#00ff00](https://via.placeholder.com/15/00ff00/000000?text=+)
report.state.old=  ![#ffaa00](https://via.placeholder.com/15/ffaa00/000000?text=+)
report.state.ancient=  ![#ff0000](https://via.placeholder.com/15/ff0000/000000?text=+)

#
# Hibernate Configuraton
#

quarkus.datasource.url=jdbc:h2:~/.snowdrop-bot/db/bot.db;DB_CLOSE_ON_EXIT=FALSE
quarkus.datasource.driver=org.h2.Driver
quarkus.datasource.username=username-default
quarkus.datasource.min-size=3
quarkus.datasource.max-size=13
quarkus.hibernate-orm.database.generation=update

# Production Profle: Use global path for file persistance.
%prod.quarkus.datasource.url=jdbc:h2:/data/snowdrop-bot/db/bot.db;DB_CLOSE_ON_EXIT=FALSE

#
# Google Docs Configuration
#

google.docs.credentials.file=~/.snowdrop-bot/google/credentials.json
#Production Profile: Read credentials
%prod.google.docs.credentials.file=/data/snowdrop-bot/google/credentials.json

# Official weekly status report
#google.docs.report.document-id=1LEFbGqT1mevdHWT9SGDAZLFcUVhZqjCzGUaHXHtujr0

# Development status report
google.docs.report.document-id=1WPefEYU_KUG8QdsqV3-mwdVUaL9tlUm1A5nKsVgDWGE
#
# Kubernetes Manifest Configuration
#

quarkus.kubernetes.deployment-target=openshift, kubernetes

# Kubernetes specific resources
quarkus.kubernetes.part-of=snowdrop-bot
quarkus.kubernetes.secret-volumes.snowdrop-googledocs=snowdrop-googledocs
quarkus.kubernetes.env-vars.snowdrop-github.secret=snowdrop-github

# Mount PVC volume
quarkus.kubernetes.pvc-volumes.snowdrop-db.claim-name=snwodrop-db-claim
quarkus.kubernetes.mounts.snowdrop-db.path=/data/db
quarkus.kubernetes.mounts.snowdrop-googledocs.path=/data/google

# Openshift specific resources
quarkus.openshift.part-of=snowdrop-bot
quarkus.openshift.secret-volumes.snowdrop-googledocs=snowdrop-googledocs
quarkus.openshift.env-vars.snowdrop-github.secret=snowdrop-github

# Mount PVC volume
quarkus.openshift.pvc-volumes.snowdrop-db.claim-name=snwodrop-db-claim
quarkus.openshift.mounts.snowdrop-db.path=/data/db
quarkus.openshift.mounts.snowdrop-googledocs.path=/data/google


quarkus.kubernetes-client.trust-certs=true
