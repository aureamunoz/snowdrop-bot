---
# Source: snowdrop-bot/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snowdrop-bot
  labels:
    helm.sh/chart: snowdrop-bot-0.1.0
    app.kubernetes.io/name: snowdrop-bot
    app.kubernetes.io/instance: snowdrop-bot
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: snowdrop-bot
      app.kubernetes.io/instance: snowdrop-bot
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snowdrop-bot
        app.kubernetes.io/instance: snowdrop-bot
    spec:
      serviceAccountName: snowdrop-bot
      securityContext:
        {}
      containers:
        - name: snowdrop-bot
          env:
          - name: "JAVA_OPTIONS"
            value: "-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
          envFrom:
          - secretRef:
              name: snowdrop-jira
          - secretRef:
              name: snowdrop-github
          securityContext:
            runAsUser: 1001
          image: "quay.io/snowdrop/snowdrop-bot:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
          resources:
            {}
          # TO BE REVIEWED AND MANAGE IT USING VALUES
          volumeMounts:
            - name: snowdrop-bot-storage
              mountPath: /data
      # TO BE REVIEWED AND MANAGE IT USING VALUES
      volumes:
      - name: snowdrop-bot-storage
        persistentVolumeClaim:
          claimName: snowdrop-bot-claim
